<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BackendApi</name>
    </assembly>
    <members>
        <member name="M:BackendApi.Controllers.DeckSlotController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.DeckSlotController.GetById(System.Int32)">
            <summary>
            Получение данных по ID
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.DeckSlotController.Add(BackendApi.Contracts.DeckSlot.CreateDeckSlotRequest)">
             <summary>
             Добавление заклинания в слот колоды
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /DeckSlots
                 {
                   "deckId": 1,
                   "inventoryId": 3,
                   "slotNumber": 2
                 }
            
             </remarks>
             <param name="model">Данные слота колоды</param>
             <returns>Созданный слот</returns>
        </member>
        <member name="M:BackendApi.Controllers.DeckSlotController.Update(BackendApi.Contracts.DeckSlot.GetDeckSlotResponse)">
            <summary>
            Изменить данные
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.DeckSlotController.Delete(System.Int32)">
            <summary>
            Удалить данные
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.GachaPullController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.GachaPullController.GetById(System.Int32)">
            <summary>
            Получение данных по ID
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.GachaPullController.Add(BackendApi.Contracts.GachPull.CreateGachaPullRequest)">
             <summary>
             Запись результата крутки гача
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /GachaPulls
                 {
                   "userId": 1,
                   "spellId": 2,
                   "pullDate": "2024-01-17T14:30:00"
                 }
            
             </remarks>
             <param name="model">Данные крутки</param>
             <returns>Запись о крутке</returns>
        </member>
        <member name="M:BackendApi.Controllers.GachaPullController.Update(BackendApi.Contracts.GachPull.GetGachaPullResponse)">
            <summary>
            Изменить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.GachaPullController.Delete(System.Int32)">
            <summary>
            Удалить данные
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.GameSafeController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.GameSafeController.GetById(System.Int32)">
            <summary>
            Получение данных по ID 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.GameSafeController.Add(BackendApi.Contracts.GameSafe.CreateGameSafeRequest)">
             <summary>
             Создание/обновление игрового сохранения
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /GameSaves
                 {
                   "userId": 1,
                   "level": 25,
                   "highScore": 125000,
                   "equippedDeckId": 1,
                   "saveData": {
                     "прогресс": 78,
                     "открытые_уровни": [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],
                     "завершенные_квесты": [1,2,3,4,5]
                   },
                   "lastUpdated": "2024-03-20T18:45:00"
                 }
            
             </remarks>
             <param name="model">Данные сохранения</param>
             <returns>Созданное сохранение</returns>
        </member>
        <member name="M:BackendApi.Controllers.GameSafeController.Update(BackendApi.Contracts.GameSafe.GetGameSafeResponse)">
            <summary>
            Изменить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.GameSafeController.Delete(System.Int32)">
            <summary>
            Удалить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.SpellController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.SpellController.GetById(System.Int32)">
            <summary>
            Получение данных по ID 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.SpellController.Add(BackendApi.Contracts.SpellRequest.CreateSpellRequest)">
             <summary>
             Создание нового заклинания
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Spells
                 {
                   "name": "Огненный шар",
                   "description": "Базовое огненное заклинание, наносит умеренный урон",
                   "costCurrency": "game",
                   "rarity": "обычная",
                   "costAmount": 5,
                   "baseDamage": 15,
                   "gameEffectCode": "damage_fire_single"
                 }
            
             </remarks>
             <param name="model">Данные заклинания</param>
             <returns>Созданное заклинание</returns>
        </member>
        <member name="M:BackendApi.Controllers.SpellController.Update(BackendApi.Contracts.SpellRequest.GetSpellResponse)">
            <summary>
            Изменить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.SpellController.Delete(System.Int32)">
            <summary>
            Удалить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TraceController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TraceController.GetById(System.Int32)">
            <summary>
            Получение данных по ID 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TraceController.Add(BackendApi.Contracts.TraceRequest.CreateTraceRequest)">
             <summary>
             Создание предложения обмена
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Traces
                 {
                   "userIdOffer": 1,
                   "userIdReceive": 2,
                   "inventoryIdOffer": 5,
                   "inventoryIdWant": 11,
                   "status": "ожидание",
                   "createdAt": "2024-02-05T14:30:00"
                 }
            
             </remarks>
             <param name="model">Данные обмена</param>
             <returns>Созданный обмен</returns>
        </member>
        <member name="M:BackendApi.Controllers.TraceController.Update(BackendApi.Contracts.TraceRequest.GetTraceResponse)">
            <summary>
            Изменить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TraceController.Delete(System.Int32)">
            <summary>
            Удалить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserClickerUpgradeController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserClickerUpgradeController.GetById(System.Int32)">
            <summary>
            Получение данных по ID 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserClickerUpgradeController.Add(BackendApi.Contracts.UserClickerUpgrade.CreateUserClickerUpgradeRequest)">
             <summary>
             Покупка улучшения кликера пользователем
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /UserClickerUpgrades
                 {
                   "userId": 1,
                   "upgradeId": 3,
                   "quantity": 1,
                   "purchasedLast": "2024-02-10T12:30:00"
                 }
            
             </remarks>
             <param name="model">Данные улучшения кликера</param>
             <returns>Запись о покупке</returns>
        </member>
        <member name="M:BackendApi.Controllers.UserClickerUpgradeController.Update(BackendApi.Contracts.UserClickerUpgrade.GetUserClickerUpgradeResponse)">
            <summary>
            Изменить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserClickerUpgradeController.Delete(System.Int32)">
            <summary>
            Удалить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserController.GetById(System.Int32)">
            <summary>
            Получение данных по ID 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserController.Add(BackendApi.Contracts.User.CreateUserRequest)">
             <summary>
             Создание нового пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Users
                 {
                   "username": "SilverArrow",
                   "email": "olga.vasilieva@email.com",
                   "passwordHash": "$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi",
                   "createdAt": "2024-02-22T13:50:00",
                   "lastLogin": "2024-03-20T14:35:00",
                   "currencyClick": 4800,
                   "currencyGame": 1200
                 }
            
             </remarks>
             <param name="model">Данные пользователя</param>
             <returns>Созданный пользователь</returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.Update(BackendApi.Contracts.User.GetUserResponse)">
            <summary>
            Изменить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Удалить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserDeckController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserDeckController.GetById(System.Int32)">
            <summary>
            Получение данных по ID 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserDeckController.Add(BackendApi.Contracts.UserDeck.CreateUserDeckRequest)">
             <summary>
             Создание новой колоды
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /UserDecks
                 {
                   "userId": 1,
                   "deckName": "Основная боевая"
                 }
            
             </remarks>
             <param name="model">Данные колоды</param>
             <returns>Созданная колода</returns>
        </member>
        <member name="M:BackendApi.Controllers.UserDeckController.Update(BackendApi.Contracts.UserDeck.GetUserDeckResponse)">
            <summary>
            Изменить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserDeckController.Delete(System.Int32)">
            <summary>
            Удалить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.GetById(System.Int32)">
            <summary>
            Получение данных по ID 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.Add(BackendApi.Contracts.UserInventory.CreateUserInventoryRequest)">
             <summary>
             Добавление заклинания в инвентарь пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /UserInventory
                 {
                   "userId": 1,
                   "spellId": 3,
                   "obtainedAt": "2024-01-20T09:15:00"
                 }
            
             </remarks>
             <param name="model">Данные инвентаря</param>
             <returns>Запись в инвентаре</returns>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.Update(BackendApi.Contracts.UserInventory.GetUserInventoryResponse)">
            <summary>
            Изменить данные пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.Delete(System.Int32)">
            <summary>
            Удалить данные пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserUpgradeController.GetAll">
            <summary>
            Получение данных 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserUpgradeController.GetById(System.Int32)">
            <summary>
            Получение данных по ID 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserUpgradeController.Add(BackendApi.Contracts.UserUpgrade.CreateUserUpgradeRequest)">
             <summary>
             Создание нового улучшения
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /UserUpgrades
                 {
                   "name": "Базовый кликер",
                   "description": "Увеличивает доход за клик на 1",
                   "costClick": 50,
                   "powerMultiplier": 1.1
                 }
            
             </remarks>
             <param name="model">Данные улучшения</param>
             <returns>Созданное улучшение</returns>
        </member>
        <member name="M:BackendApi.Controllers.UserUpgradeController.Update(BackendApi.Contracts.UserUpgrade.GetUserUpgradeResponse)">
            <summary>
            Изменить данные 
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserUpgradeController.Delete(System.Int32)">
            <summary>
            Удалить данные 
            </summary>
        </member>
    </members>
</doc>
